@page "/"
@using GameStore.FrontEnd.Services

@inject GameService GameService

<PageTitle>Game Catalog</PageTitle>

<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/editgame">New Game</a>

</div>
@if(games is null)
{
    <p>Loading...</p>
}
else
{
    <p>There are @games.Count games in the catalog</p>


<table class="table table-striped table-bordered table-hover">
    <thead class="table-dark">
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Genre</th>
            <th class="text-end">Price</th>
            <th>Release Date</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var game in games)
        {
            <tr>
                <td>@game.Id</td>
                <td>@game.Name</td>
                <td>@game.GenreName</td>
                <td class="text-end">@game.Price.ToString("C2")</td>
                <td>@game.ReleaseDate</td>
                <td>
                    <div>
                        <a class="btn btn-sm btn-primary" role="button" href="@GameUrl(game.Id)"><i class="bi bi-pencil"></i></a>
                            <button class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(game)"><i class="bi bi-x-lg"></i></button>
                    </div>
                    <div>
                       
                    </div>
                    <DeleteGame game="@game" />
                </td>
            </tr>
        }
    </tbody>
</table>
}

@code{

    List<GameDetails>? games = new List<GameDetails>();

    protected override async Task OnInitializedAsync()
    {
        games = await GameService.GetGamesAsync();
    }

    // public void DeleteGame(int id)
    // {
    //     GamesClient.DeleteGame(id);
    //     Console.WriteLine($"Delete game {id}");
    // }

    private static string GameUrl(int id) => $"/editgame/{id}";

    private string GetDeleteModalId(GameDetails game)
    {
        return $"#{DeleteGame.GetModalId(game)}";
    }
}   
